name: Testing and build docker

on: [push, pull_request]

jobs:
  Testing_Marvel_API:
    environment:
      name: Testing Marvel-API
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2 
      - name: Installing python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Installing dependencies
        run: pip install -r marvel/requirements.txt
      - name: Installing Marvel API and unitest dependencies
        run: |
          pip install unittest2
          pip install marvel
      - name: Runing tests!
        run: |
          cd marvel/tests/
          python test_marvel_endpoint.py

  Testing_Users_API:
    environment:
      name: Testing Users-API
    env:
      database_hostname: ${{secrets.DATABASE_HOSTNAME}}
      database_password: ${{secrets.DATABASE_PASSWORD}}
      database_name: ${{secrets.DATABASE_NAME}}
      database_username: ${{secrets.DATABASE_USERNAME}}
      database_collection: users ${{secrets.DATABASE_COLLECTION}}
      secret_key: ${{secrets.SECRET_KEY}}
      algorithm: ${{secrets.ALGORITHM}}
      access_token_expires_minutes: ${{secrets.ACCESS_TOKEN_EXPIRES_MINUTES}}
      api_key: ${{secrets.API_KEY}}
      api_key_name: ${{secrets.API_KEY_NAME}}
      cookie_domain: ${{secrets.COOKIE_DOMAIN}}
    
    # services:
      # postgres:
        # image: postgres
        # env: 
        #   POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        #   POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        # ports:
        # - 5432:5432
        # options: >-
        #   --health-cmd pg_isready
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2 
      - name: Installing python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Installing dependencies
        run: pip install -r users/requirements.txt
      - name: Installing Users Microservice and unitest dependencies
        run: |
          pip install bcrypt
      - name: Runing tests!
        run: |
          cd users/tests/
          python test_users_endpoint.py
# Docker:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{secrets.DOCKER_HUB_USERNAME}}
#         password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

#     - name: Set up Docker Buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Build and push
#       id: docker_build
#       uses: docker/build-push-action@v2
#       with:
#         context: ./
#         file: ./Dockerfile
#         push: true
#         tags: ${{secrets.DOCKER_HUB_USERNAME}}/marvel-api:latest
#         cache-from: type=local,src=/tmp/.buildx-cache
#         cache-to: type=local,dest=/tmp/.buildx-cache
#     - name: Image digest
#       run: echo ${{steps.docker_build.outputs.digest}}

  # Heroku deployment
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [Docker]
  #   environment:
  #     name: production
    
  #   steps:
  #     - name: Pulling git repo
  #       uses: actions/checkout@v2
  #     - name: Deploying to Heroku
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #         heroku_email: ${{secrets.HEROKU_EMAIL}}